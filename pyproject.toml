[project]
name = "tkplanes"
version = "0.1.0"

dependencies=[
    "nerfstudio>=0.3.1",
]

# black
[tool.black]
line-length = 120

# pylint
[tool.pylint.messages_control]
max-line-length = 120
generated-members = ["numpy.*", "torch.*", "cv2.*", "cv.*"]
good-names-rgxs = "^[_a-zA-Z][_a-z0-9]?$"
# ignore-paths = ["scripts/colmap2nerf.py"]
ignore-paths = []
jobs = 1
ignored-classes = ["TensorDataclass"]

disable = [
  "duplicate-code",
  "fixme",
  "logging-fstring-interpolation",
  "too-many-arguments",
  "too-many-branches",
  "too-many-instance-attributes",
  "too-many-locals",
  "unnecessary-ellipsis",
]

[tool.setuptools.packages.find]
include = ["tkplanes*"]

[project.entry-points.'nerfstudio.method_configs']
tkplanes= 'tkplanes.tkplanes_method_config:kplanes_method'
tkplanes_olddynamic= 'tkplanes.tkplanes_method_config:kplanes_olddynamic_method'
tkplanes_dynamic= 'tkplanes.tkplanes_method_config:kplanes_dynamic_method'
# pynerf_synthetic = 'pynerf.pynerf_method_config:pynerf_synthetic_method'
# pynerf_occupancy_grid = 'pynerf.pynerf_method_config:pynerf_occupancy_method'

[project.entry-points.'nerfstudio.dataparser_configs']
# multicam-data = 'pynerf.pynerf_data_config:multicam_dataparser'
# mipnerf360-data = 'pynerf.pynerf_data_config:mipnerf360_dataparser'
# adop-data = 'pynerf.pynerf_data_config:adop_dataparser'
okutama-data = 'tkplanes.tkplanes_data_config:okutama_dataparser'